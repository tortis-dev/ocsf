name: Build, Test, and Publish

on:
  push:
    branches: [ main ]
    paths:
      - 'TortisDev.Ocsf/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'TortisDev.Ocsf/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.2.1
        with:
          versionSpec: '6.3.x'
      - name: Run GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3.2.1
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration Release /p:Version=${{ steps.gitversion.outputs.semVer }}
      - name: Test
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"
      - name: Pack
        run: dotnet pack ./TortisDev.Ocsf/TortisDev.Ocsf.csproj --no-build --configuration Release -o ./nupkg
      - name: Publish to NuGet
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      - name: Create Git tag
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ steps.gitversion.outputs.semVer }}
          git push origin v${{ steps.gitversion.outputs.semVer }}
      - name: Create GitHub Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          name: Release v${{ steps.gitversion.outputs.semVer }}
          generate_release_notes: true
